<Window x:Class="CharacterCreator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CharacterCreator" 
        xmlns:resx="clr-namespace:CharacterCreator.Properties"
        xmlns:viewmodel="clr-namespace:CharacterCreator.MVVM.ViewModel"
        mc:Ignorable="d" WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        Title="{x:Static resx:Resources.MainAppTitle}" d:DesignHeight="1080" d:DesignWidth="1920" WindowState="{Binding CurrentWindowState, UpdateSourceTrigger=PropertyChanged}">
    <Window.DataContext>
        <viewmodel:MainViewModel/>
    </Window.DataContext>
    <Grid Margin="7">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Background="{StaticResource MainColourDark}" MouseDown="Grid_MouseDown" MouseMove="Grid_MouseMove">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Image Source="Images/Logo-Small.png" Grid.Column="0" Margin="2"/>

            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=Title, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" HorizontalAlignment="Left" Foreground="White" Margin="5" FontSize="18"/>

            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="ButtonCloseStyle" TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="LightGray"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="Width" Value="30"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#ff3333"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    
                    <Style x:Key="ButtonResizeStyle" TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="LightGray"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="Width" Value="30"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <Button x:Name="btnMinimize" Style="{StaticResource ButtonResizeStyle}" Command="{Binding CommandMinimize}">
                    <Image Source="Images/MinimizeButton.png"/>
                </Button>
                <Button x:Name="btnMaximize" Command="{Binding CommandMaximize}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonResizeStyle}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Image Source="Images/NormalizeButton.png"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=WindowState}" Value="{x:Static WindowState.Normal}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Image Source="Images/MaximizeButton.png"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnClose" Command="{Binding CommandClose}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" Style="{StaticResource ButtonCloseStyle}">
                    <Image Source="Images/CloseButton.png"/>
                </Button>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1" Background="{StaticResource MainColourLight}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="75"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Image Source="Images/Logo-Large.png" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0"/>

            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical">
                <Expander Header="{x:Static resx:Resources.MenuCategoryFiles}" IsExpanded="True" ExpandDirection="Down" Style="{StaticResource MenuHeaderExpanderTheme}">
                    <StackPanel Orientation="Vertical">
                        <RadioButton Content="{x:Static resx:Resources.MenuButtonNewCharacter}" IsChecked="{Binding NewCharacterVM.IsSelected, UpdateSourceTrigger=PropertyChanged}" GroupName="RBMenu" Command="{Binding CommandSwitchView}" CommandParameter="{Binding NewCharacterVM}" Style="{StaticResource MenuRadioButtonTheme}"/>
                        <RadioButton Content="{x:Static resx:Resources.MenuButtonLoadCharacter}" IsChecked="{Binding LoadCharacterVM.IsSelected, UpdateSourceTrigger=PropertyChanged}" GroupName="RBMenu" Command="{Binding CommandSwitchView}" CommandParameter="{Binding LoadCharacterVM}" Style="{StaticResource MenuRadioButtonTheme}"/>
                    </StackPanel>
                </Expander>
                <Expander Header="{x:Static resx:Resources.MenuCategoryPlay}" IsExpanded="True" ExpandDirection="Down" Style="{StaticResource MenuHeaderExpanderTheme}">
                    <StackPanel Orientation="Vertical">
                        <RadioButton Content="{x:Static resx:Resources.MenuButtonCharactersheet}" IsChecked="{Binding CharacterSheetVM.IsSelected, UpdateSourceTrigger=PropertyChanged}" GroupName="RBMenu" Command="{Binding CommandSwitchView}" CommandParameter="{Binding CharacterSheetVM}" Style="{StaticResource MenuRadioButtonTheme}"/>
                    </StackPanel>
                </Expander>
                <Expander Header="{x:Static resx:Resources.MenuCategoryCharacter}" IsExpanded="True" ExpandDirection="Down" Style="{StaticResource MenuHeaderExpanderTheme}">
                    <StackPanel Orientation="Vertical">
                        <RadioButton Content="{x:Static resx:Resources.MenuButtonProfile}" IsChecked="{Binding ProfileVM.IsSelected, UpdateSourceTrigger=PropertyChanged}" GroupName="RBMenu" Command="{Binding CommandSwitchView}" CommandParameter="{Binding ProfileVM}" Style="{StaticResource MenuRadioButtonTheme}"/>
                        <RadioButton Content="{x:Static resx:Resources.MenuButtonJournal}" IsChecked="{Binding JournalVM.IsSelected, UpdateSourceTrigger=PropertyChanged}" GroupName="RBMenu" Command="{Binding CommandSwitchView}" CommandParameter="{Binding JournalVM}" Style="{StaticResource MenuRadioButtonTheme}"/>
                    </StackPanel>
                </Expander>
            </StackPanel>

            <ContentControl Grid.Row="1" Grid.Column="1" Margin="0" Content="{Binding CurrentView}"/>
        </Grid>
    </Grid>
</Window>
